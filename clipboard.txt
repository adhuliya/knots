
https://www.musictheory.net/exercises

https://www.fullstackpython.com/bottle.html

$ django-admin startproject mysite

$ python manage.py runserver 0:8000

Let’s look at what startproject created:

mysite/
    manage.py
    mysite/
        __init__.py
        settings.py
        urls.py
        asgi.py
        wsgi.py



$ python manage.py runserver

$ python manage.py startapp polls

That’ll create a directory polls, which is laid out like this:

polls/
    __init__.py
    admin.py
    apps.py
    migrations/
        __init__.py
    models.py
    tests.py
    views.py



$ python manage.py makemigrations polls

$ python manage.py sqlmigrate polls 0001

If you’re interested, you can also run python manage.py check; this checks for any problems in your project without making migrations or touching the database.

$ python manage.py migrate

We can examine the machine instructions emitted in this step by calling llc with the -print-machineinstrs flag and looking at the first output that says "After instruction selection":

By passing -show-mc-inst and -show-mc-encoding to llc, we can see the MC-level instructions it creates with their encoding, alongside the actual assembly code:

/// This is the main entry point for the type legalizer. This does a top-down
/// traversal of the dag, legalizing types as it goes. Returns "true" if it made
/// any changes.
bool DAGTypeLegalizer::run() {
  bool Changed = false;


 The various operation node types are described at the top of the include/llvm/CodeGen/ISDOpcodes.h file.

 Because nodes may define multiple values, edges are represented by instances of the SDValue class, which is a <SDNode, unsigned> pair, indicating the node and result value being used, respectively. Each value produced by an SDNode has an associated MVT (Machine Value Type) indicating what the type of the value is.

https://llvm.org/docs/CodeGenerator.html#introduction-to-selectiondags

QQ thinkpad self diagnostic beeps how to manage?


QQ How to detect which process just started/stopped?

QQ How to see a history of processes that exited in order?

http://localhost:5050/knotes-git/sparc/sparc.html#llvm



Cambridge Assessment English
https://www.cambridgeenglish.org/exams-and-tests/cefr/
Common European Framework of Reference for Languages (CEFR)
word: ruddy, euphemism of bloody
word: ruddy is the euphemism of 'bloody'
word: 'ruddy' is the euphemism of 'bloody'

Task: Repace text in many files

    for x in ./**/*.py; do sed -i "s/Copyright (c) 2019/Copyright (c) 2020/" $x; echo $x; done


Clang preprocessor:
  -dM                     Print macro definitions in -E mode instead of normal output
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  -emit-ast               Emit Clang AST files for source inputs

gcc -E -nostdinc will bypass standard #include files
You might also need to specify -x c if the file you are processing has not a standard c extension

Source file name and line number information is conveyed by lines of the form

     # linenum filename flags

These are called linemarkers.
https://gcc.gnu.org/onlinedocs/gcc-3.4.6/cpp/Preprocessor-Output.html

some more clang options regarding pre-processing:
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path


QQ Is Intraprocedural and Context Insensitive the same?

PP. ((x - K_2) \union G_2) \intersect ((x - K_1) \union G_1)
    (x - (K_1 \union K_2)) \union (G_1 \intersect G_2)


Happening now video meeting 
